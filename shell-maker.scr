; -*- Scheme -*-
(style 'bo-style 'oeuvres_bastiat)

(letrec
   ((tome (lambda (num ord contenu bnf pagemax pageoffset date rec)
	(begin
	 (for-each display (list "# Tome " ord "\n"))
	 (set! curbnf bnf)
	 (set! curoffset pageoffset)
	 (flush)
	 (for-each entry rec))))
    (curbnf 0)
    (curoffset 0)
    (curtable '())
    (flush (lambda () (set! curtable '())))
    (get-table (lambda () (reverse curtable)))
    (entry (lambda (rec)
	(case (car rec)
	  ((P) (apply P (cdr rec)))
	  ((G) (apply G (cdr rec)))
	  ((S) (S (cadr rec) (cddr rec)))
	  ((PS) (PS (nth 1 rec) (nth 2 rec) (nth 3 rec)
		    (nth 4 rec) (nth 5 rec)
		    (nthcdr 6 rec))))))
    (X (lambda (type num beg end file title)
	 (for-each display (list (foo->string type) " "
				 num " " beg " " end " " file "\n"))))
    (P (lambda (num beg end file title)
	(X :p num beg end file title)))
    (G (lambda (num beg end file title)
	(X :g num beg end file title)))
    (S (lambda (title rec)
	(for-each entry rec)))
    (PS (lambda (num beg end file title rec)
	  (P num beg end file title)
	  (for-each (SP num file) rec)))
    (SP (lambda (num file)
	 (lambda (rec)
	  (if (and (list? rec)
		   (eq? 'SP (car rec)))
	   #f))))
    (C (lambda (rec)
	(if (and (list? rec)
	         (>= (length rec) 8)
	         (eq? 'tome (car rec)))
	   (tome (nth 1 rec) (nth 2 rec) (nth 3 rec)
	    (nth 4 rec) (nth 5 rec) (nth 6 rec) (nth 7 rec)
	    (nthcdr 8 rec))
	   (error "foo")))))
   (map C sommaire-db))
